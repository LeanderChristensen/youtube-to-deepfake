<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Youtube to deepfake</title>
    <link href="index.css" rel="stylesheet" type="text/css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script>
        var voice_id = null;
        var audio = null;
        var audioURL = null;
        function downloadSound() {
            if (!audioURL) return;
            const downloadLink = document.createElement('a');
            downloadLink.href = audioURL;
            downloadLink.download = 'audio.mp3';
            downloadLink.click();
        }
        Promise.race([
				  fetch(`/checkIfFull`),
				  new Promise((_, reject) => setTimeout(() => reject(new Error('Timeout')), 15000))
				])
				  .then(res => res.json())
				  .then(data => {
				    if (data) {
                        if (data == 1) { return; }
                    	console.log("Server is full, please try again later");
                    	document.getElementById('title').style.display = 'none';
				    	document.getElementById('linkFormDiv').style.display = 'none';
				    	document.getElementById('ttsFormDiv').style.display = 'none';
				    	document.getElementById('loadingDiv').style.display = 'none';
				    	document.getElementById('errorDiv').style.display = 'none';
						document.getElementById('fullDiv').style.display = 'block';
					}
				  })
				  .catch(error => {
				    console.error(error);
                    console.log("Lost connection to server");
                    document.getElementById('title').style.display = 'none';
				    document.getElementById('linkFormDiv').style.display = 'none';
				    document.getElementById('ttsFormDiv').style.display = 'none';
				    document.getElementById('loadingDiv').style.display = 'none';
					document.getElementById('fullDiv').style.display = 'none';
				    document.getElementById('errorDiv').style.display = 'block';
				  });
		setInterval(() => {
			if (voice_id) {
				Promise.race([
				  fetch(`/checkSessionExpired/${voice_id}`),
				  new Promise((_, reject) => setTimeout(() => reject(new Error('Timeout')), 15000))
				])
				  .then(res => res.json())
				  .then(data => {
				    if (data) { return; }
				  })
				  .catch(error => {
				    console.error(error);
                    console.log("Lost connection to server");
                    document.getElementById('title').style.display = 'none';
				    document.getElementById('linkFormDiv').style.display = 'none';
				    document.getElementById('ttsFormDiv').style.display = 'none';
				    document.getElementById('loadingDiv').style.display = 'none';
					document.getElementById('fullDiv').style.display = 'none';
				    document.getElementById('errorDiv').style.display = 'block';
				  });
			} else {
				Promise.race([
				  fetch(`/checkIfFull`),
				  new Promise((_, reject) => setTimeout(() => reject(new Error('Timeout')), 15000))
				])
				  .then(res => res.json())
				  .then(data => {
				    if (data) {
                        if (data == 1) { return; }
                    	console.log("Server is full, please try again later");
                    	document.getElementById('title').style.display = 'none';
				    	document.getElementById('linkFormDiv').style.display = 'none';
				    	document.getElementById('ttsFormDiv').style.display = 'none';
				    	document.getElementById('loadingDiv').style.display = 'none';
				    	document.getElementById('errorDiv').style.display = 'none';
						document.getElementById('fullDiv').style.display = 'block';
					}
				  })
				  .catch(error => {
				    console.error(error);
                    console.log("Lost connection to server");
                    document.getElementById('title').style.display = 'none';
				    document.getElementById('linkFormDiv').style.display = 'none';
				    document.getElementById('ttsFormDiv').style.display = 'none';
				    document.getElementById('loadingDiv').style.display = 'none';
					document.getElementById('fullDiv').style.display = 'none';
				    document.getElementById('errorDiv').style.display = 'block';
				  });
			}
		}, 10000); // check server/client connection every 10 seconds
        function linkSubmit(e){
            const youtubeLink = document.getElementById('youtubeLink').value;
            const youtubeRegex = /^(https?:\/\/)?(www\.)?(youtube\.com\/watch\?v=|youtu\.be\/)([A-Za-z0-9_-]{11})$/;
            e.preventDefault();
            if (youtubeRegex.test(youtubeLink)) {
                document.getElementById('linkFormDiv').style.display = 'none';
                document.getElementById('title').style.display = 'none';
                document.getElementById('loadingDiv').style.display = 'block';
                $.ajax({
                    type: $('#linkForm').attr('method'),
                    url: '/download',
                    data: $('#linkForm').serialize(),
                    success: function (data) {
			    		if (data == 0) {
			    			console.log("Server is full, please try again later");
                        	document.getElementById('title').style.display = 'none';
			    	    	document.getElementById('linkFormDiv').style.display = 'none';
			    	    	document.getElementById('ttsFormDiv').style.display = 'none';
			    	    	document.getElementById('loadingDiv').style.display = 'none';
			    	    	document.getElementById('errorDiv').style.display = 'none';
			    			document.getElementById('fullDiv').style.display = 'block';
			    		} else {
                        	console.log('Submission was successful.');
                        	voice_id = data.voice_id;
                        	document.getElementById('loadingDiv').style.display = 'none';
                        	document.getElementById('title').style.display = 'block';
                        	document.getElementById('ttsFormDiv').style.display = 'block';
			    		}
                    },
                    error: function (data) {
                        console.log('An error occurred.');
                    }
                });
            } else {
                alert("Invalid youtube link");
            }
        }
        function ttsSubmit(e){
            document.getElementById('playBtn').disabled = true;
            document.getElementById('downloadBtn').disabled = true;
            e.preventDefault();
            $.ajax({
                type: $('#ttsForm').attr('method'),
                url: '/tts',
                data: $('#ttsForm').serialize() + '&voice_id=' + voice_id,
                success: function (data) {
                    console.log('Submission was successful.');
                    const base64Audio = data;
                    const binaryString = window.atob(base64Audio); // Convert the base64 encoded string to an ArrayBuffer
                    const len = binaryString.length;
                    const bytes = new Uint8Array(len);
                    for (let i = 0; i < len; i++) {
                      bytes[i] = binaryString.charCodeAt(i);
                    }
                    const audioBlob = new Blob([bytes.buffer], { type: 'audio/mpeg' });
                    audioURL = URL.createObjectURL(audioBlob);
                    audio = new Audio(audioURL);
                    audio.play();
                    document.getElementById('playBtn').disabled = false;
                    document.getElementById('downloadBtn').disabled = false;
                },
                error: function (data) {
                    console.log('An error occurred.');
                    console.log(data);
                }
            });
        }
    </script>
</head>
<body>
<div id="main">
    <h1 id="title">Youtube to deepfake voice app</h1>
    <div id="linkFormDiv">
        <form action="#" id="linkForm" onsubmit="linkSubmit(event);" method="POST">
            <input class="form-control textBox" id="youtubeLink" name="url" type="text" autocomplete="off" placeholder="https://www.youtube.com/watch?v=2ZIpFytCSVc">
            <input class="btn btn-outline-light formButton" type="submit" value="Create">
        </form>
    </div>
    <div id="loadingDiv" style="display: none;">
        <div id="progress"></div>
    </div>
    <div id="errorDiv" style="display: none;">
        <h2>⚠️ Connection to server lost</h2>
    </div>
	<div id="fullDiv" style="display: none;">
        <h2>⚠️ Server is full, please try again later</h2>
    </div>
    <div id="ttsFormDiv" style="display: none;">
        <form action="#" id="ttsForm" onsubmit="ttsSubmit(event);" method="POST">
            <textarea class="form-control textBox" id="voice" name="text" rows="4" autocomplete="off" cols="50"></textarea>
            <input id="submitBtn" class="btn btn-outline-light formButton" type="submit" value="Generate">
        </form>
            <input id="playBtn" class="btn btn-outline-light formButton" type="submit" onclick="audio.play()" value="Replay" disabled>
            <input id="downloadBtn" class="btn btn-outline-light formButton" type="submit" onclick="downloadSound()" value="Download" disabled>
    </div>
</div>
</body>
</html>